@macro load_str {
  @data #{_0}
  load_data $d1 #{_1}
}

@macro call {
  push_addr
  jmp #{_0}
}

@macro return {
  load_local $l1 $r1
  pop
  jmp $r1
}

@macro function { // <- body not lexed/parsed until 'invoked'. '#{}' preprocessed. think of everything in body as a string.
  jmp _#{id}_end
  #{_0}:
    push_addr
    #{body}
    @return
  _#{id}_end:
}

@function print {
  native_call _System_C_puts
}
/*
==>
  jmp _12345123_fn_end
  print:
    native_call _System_C_puts
    load_local $l1 $r1
    pop
    jmp $r1
  _12345123_fn_end:
*/

// ==================================

@load_str "hello world" $r0
push $r0
@call print
pop

/*
==>
  load_str "hello world" $r0
  push $r0
  push_addr
  jmp print
  pop
*/

