@macro load_str {
  @data #{_0}
  load_data $d[-1] #{_1}
}

@macro call {
  push_addr
  jmp #{_0}
}

@macro return {
  load_local $l[-1] $r[1]
  pop
  jmp $r[1]
}

@macro function { // <- body not lexed/parsed until 'invoked'. '#{}' preprocessed. think of everything in body as a string.
  jmp _#{id}_end
  #{_0}:
    push_addr
    #{body}
    @return
  _#{id}_end:
}

@bind _System_C_puts // <-- currently stored in $d[0] -- first in data table. $d[0] is tagged as :_System_C_puts

@function print {
  native_call #{:_System_C_puts}
}
/*
==>
  jmp _12345123_fn_end
  print:
    native_call $d[0]
    load_local $l[-1] $r[1]
    pop
    jmp $r[1]
  _12345123_fn_end:
*/

// ==================================

@load_str "hello world" $r[0]
push $r[0]
@call print
pop

/*
==>
  load_str "hello world" $r[0]
  push $r[0]
  push_addr
  jmp print
  pop
*/

